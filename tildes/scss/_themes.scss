// Copyright (c) 2018 Tildes contributors <code@tildes.net>
// SPDX-License-Identifier: AGPL-3.0-or-later

// This file should only contain rules that need to differ between the
// different themes, defined inside the `theme-dependent` mixin below.
// Note that all rules inside the mixin will be included in the compiled CSS
// once for each theme, so they should be kept as minimal as possible.

@mixin specialtag($color, $is-light) {
  @if $is-light {
    background-color: $color;

    a {
      color: white;
    }
  }
  @else {
    background-color: transparent;
    color: $color;
    border: 1px solid $color;

    a {
      color: $color;
    }
  }
}

@mixin theme-dependent($background-color, $background-alt-color, $text-color, $text-highlight-color, $text-secondary-color, $border-color) {
  // set $is-light as a bool for whether $background-color seems light or dark
  $is-light: lightness($background-color) > 50;

  $text-mid-color: mix($text-color, $text-secondary-color);
  $text-extreme-color: if($is-light, #000, #fff);

  // if $background-color is light, make the input background even lighter,
  // but if it's dark, make input background even darker
  $input-background-color: if($is-light, lighten($background-color, 3%), darken($background-color, 3%));

  background-color: $background-alt-color;
  color: $text-color;

  @include syntax-highlighting($is-light);

  blockquote {
    background-color: $background-alt-color;
    border-color: $text-highlight-color;
  }

  code, pre {
    background-color: $background-alt-color;
    color: $text-highlight-color;
  }

  fieldset {
    border-color: $border-color;
  }

  figure {
    border-color: $border-color;
  }

  main {
    background-color: $background-color;
  }

  section {
    border-color: $border-color;
  }

  .tab-listing-order {
    border-color: $border-color;
  }

  .logged-in-user-username {
    color: $text-color;
  }

  .sidebar-controls {
    background-color: $background-alt-color;
  }

  .site-header-context, .site-header-username {
    color: $text-color;
  }

  .site-header-logo {
    color: $text-highlight-color;
  }

  #sidebar {
    background-color: $background-color;
  }

  .btn-comment-collapse {
    color: $text-secondary-color;
    border-color: $border-color;
  }

  .comment {
    border-color: $border-color;

    header {
      background-color: $background-alt-color;
      color: $text-highlight-color;
    }
  }

  .comment[data-comment-depth="0"] {
    border-color: $border-color;
  }

  .comment-branch-counter {
    color: $text-secondary-color;
  }

  .comment-nav-link {
    color: $text-secondary-color;
  }

  .label-comment-exemplary { @include specialtag($comment-label-exemplary-color, $is-light); }
  .label-comment-joke { @include specialtag($comment-label-joke-color, $is-light); }
  .label-comment-noise { @include specialtag($comment-label-noise-color, $is-light); }
  .label-comment-offtopic { @include specialtag($comment-label-offtopic-color, $is-light); }
  .label-comment-malice { @include specialtag($comment-label-malice-color, $is-light); }

  %collapsed-theme {
    header {
      background-color: $background-color;
    }
  }

  .is-comment-collapsed:not(:target) {
    @extend %collapsed-theme;
  }

  .is-comment-collapsed-individual:not(:target) {
    & > .comment-itself {
      @extend %collapsed-theme;
    }
  }

  .is-comment-deleted, .is-comment-removed {
    color: $text-secondary-color;
  }

  .is-comment-new {
    .comment-text {
      color: $text-highlight-color;
    }
  }

  .divider {
    border-color: $border-color;
  }

  .divider[data-content]::after {
    color: $text-color;
    background-color: $background-color;
  }

  .empty-subtitle {
    color: $text-secondary-color;
  }

  .form-input {
    background-color: $input-background-color;
    color: $text-color;
  }

  .form-input:not(:focus) {
    border-color: $border-color;
  }

  .form-select {
    border-color: $border-color;
  }

  .form-select:not([multiple]):not([size]) {
    background-color: $input-background-color;
  }

  .message {
    border-color: $border-color;

    header {
      background-color: $background-alt-color;
      color: $text-highlight-color;
    }
  }

  .label-topic-tag {
    color: $text-mid-color;

    a {
      color: $text-mid-color;
    }
  }

  .label-topic-tag-nsfw {
    @include specialtag($topic-tag-nsfw-color, $is-light);
  }

  .label-topic-tag-spoiler {
    @include specialtag($topic-tag-spoiler-color, $is-light);
  }

  .post-button {
    color: $text-secondary-color;

    &:hover {
      color: $text-extreme-color;
    }
  }

  .post-button-used {
    color: $violet;
  }

  td {
    border-color: $border-color;
  }

  th {
    border-color: $text-highlight-color;
  }

  tbody tr:nth-of-type(2n+1) {
    background-color: $background-alt-color;
  }

  .text-secondary {
    color: $text-secondary-color;
  }

  .toast {
    background-color: $background-alt-color;
    border-color: $border-color;
    color: $text-highlight-color;
  }

  // Toasts should have colored border + text for dark themes, instead of a
  // brightly colored background
  @if ($is-light == false) {
    .toast-warning {
      border-color: $orange;
      color: $orange;
      background-color: transparent;
    }
  }

  .topic-listing {
    & > li:nth-of-type(2n) {
      background-color: mix($background-color, $background-alt-color);
      color: mix($text-color, $text-highlight-color);
    }
  }

  .topic {
    border-color: $border-color;
  }

  .topic-content-metadata {
    color: $text-secondary-color;
  }

  .topic-full-byline {
    color: $text-secondary-color;
  }

  .topic-info {
    color: $text-mid-color;
  }

  .topic-log-entry-time {
    color: $text-secondary-color;
  }

  .topic-text-excerpt {
    color: $text-secondary-color;

    summary::after {
      color: $text-secondary-color;
    }

    &[open] {
      color: $text-color;
    }
  }
}

@mixin syntax-highlighting($is-light) {
  @if ($is-light) {
    .highlight {
      .syntax-c { color: #129b12; } // Comment
      .syntax-err { color: #333333; } // Error
      .syntax-g { color: #333333; } // Generic
      .syntax-k { color: #3329c2; } // Keyword
      .syntax-l { color: #333333; } // Literal
      .syntax-n { color: #333333; } // Name
      .syntax-o { color: #859900; } // Operator
      .syntax-x { color: #cb4b16; } // Other
      .syntax-p { color: #333333; } // Punctuation
      .syntax-cm { color: #129b12; } // Comment.Multiline
      .syntax-cp { color: #859900; } // Comment.Preproc
      .syntax-c1 { color: #129b12; } // Comment.Single
      .syntax-cs { color: #859900; } // Comment.Special
      .syntax-gd { color: #2aa198; } // Generic.Deleted
      .syntax-ge { color: #333333; font-style: italic; } // Generic.Emph
      .syntax-gr { color: #dc322f; } // Generic.Error
      .syntax-gh { color: #cb4b16; } // Generic.Heading
      .syntax-gi { color: #859900; } // Generic.Inserted
      .syntax-go { color: #333333; } // Generic.Output
      .syntax-gp { color: #333333; } // Generic.Prompt
      .syntax-gs { color: #333333; font-weight: bold; } // Generic.Strong
      .syntax-gu { color: #cb4b16; } // Generic.Subheading
      .syntax-gt { color: #333333; } // Generic.Traceback
      .syntax-kc { color: #cb4b16; } // Keyword.Constant
      .syntax-kd { color: #268bd2; } // Keyword.Declaration
      .syntax-kn { color: #859900; } // Keyword.Namespace
      .syntax-kp { color: #859900; } // Keyword.Pseudo
      .syntax-kr { color: #268bd2; } // Keyword.Reserved
      .syntax-kt { color: #3329c2; } // Keyword.Type
      .syntax-ld { color: #333333; } // Literal.Date
      .syntax-m { color: #2aa198; } // Literal.Number
      .syntax-s { color: #2aa198; } // Literal.String
      .syntax-na { color: #333333; } // Name.Attribute
      .syntax-nb { color: #B58900; } // Name.Builtin
      .syntax-nc { color: #268bd2; } // Name.Class
      .syntax-no { color: #cb4b16; } // Name.Constant
      .syntax-nd { color: #268bd2; } // Name.Decorator
      .syntax-ni { color: #cb4b16; } // Name.Entity
      .syntax-ne { color: #cb4b16; } // Name.Exception
      .syntax-nf { color: #268bd2; } // Name.Function
      .syntax-nl { color: #333333; } // Name.Label
      .syntax-nn { color: #333333; } // Name.Namespace
      .syntax-nx { color: #333333; } // Name.Other
      .syntax-py { color: #333333; } // Name.Property
      .syntax-nt { color: #268bd2; } // Name.Tag
      .syntax-nv { color: #268bd2; } // Name.Variable
      .syntax-ow { color: #859900; } // Operator.Word
      .syntax-w { color: #333333; } // Text.Whitespace
      .syntax-mf { color: #2aa198; } // Literal.Number.Float
      .syntax-mh { color: #2aa198; } // Literal.Number.Hex
      .syntax-mi { color: #2aa198; } // Literal.Number.Integer
      .syntax-mo { color: #2aa198; } // Literal.Number.Oct
      .syntax-sb { color: #129b12; } // Literal.String.Backtick
      .syntax-sc { color: #2aa198; } // Literal.String.Char
      .syntax-sd { color: #333333; } // Literal.String.Doc
      .syntax-s2 { color: #2aa198; } // Literal.String.Double
      .syntax-se { color: #cb4b16; } // Literal.String.Escape
      .syntax-sh { color: #333333; } // Literal.String.Heredoc
      .syntax-si { color: #2aa198; } // Literal.String.Interpol
      .syntax-sx { color: #2aa198; } // Literal.String.Other
      .syntax-sr { color: #dc322f; } // Literal.String.Regex
      .syntax-s1 { color: #2aa198; } // Literal.String.Single
      .syntax-ss { color: #2aa198; } // Literal.String.Symbol
      .syntax-bp { color: #268bd2; } // Name.Builtin.Pseudo
      .syntax-vc { color: #268bd2; } // Name.Variable.Class
      .syntax-vg { color: #268bd2; } // Name.Variable.Global
      .syntax-vi { color: #268bd2; } // Name.Variable.Instance
      .syntax-il { color: #2aa198; } // Literal.Number.Integer.Long
    }
  } @else {
    .highlight {
      .syntax-c { color: #759299; }
      .syntax-err { color: #93a1a1; }
      .syntax-g { color: #93a1a1; }
      .syntax-k { color: #859900; }
      .syntax-l { color: #93a1a1; }
      .syntax-n { color: #93a1a1; }
      .syntax-o { color: #859900; }
      .syntax-x { color: #e9662f; }
      .syntax-p { color: #93a1a1; }
      .syntax-cm { color: #759299; }
      .syntax-cp { color: #859900; }
      .syntax-c1 { color: #759299; }
      .syntax-cs { color: #859900; }
      .syntax-gd { color: #2aa198; }
      .syntax-ge { color: #93a1a1; font-style: italic; }
      .syntax-gr { color: #e8625f; }
      .syntax-gh { color: #e9662f; }
      .syntax-gi { color: #859900; }
      .syntax-go { color: #93a1a1; }
      .syntax-gp { color: #93a1a1; }
      .syntax-gs { color: #93a1a1; font-weight: bold; }
      .syntax-gu { color: #e9662f; }
      .syntax-gt { color: #93a1a1; }
      .syntax-kc { color: #e9662f; }
      .syntax-kd { color: #3294da; }
      .syntax-kn { color: #859900; }
      .syntax-kp { color: #859900; }
      .syntax-kr { color: #3294da; }
      .syntax-kt { color: #e8625f; }
      .syntax-ld { color: #93a1a1; }
      .syntax-m { color: #2aa198; }
      .syntax-s { color: #2aa198; }
      .syntax-na { color: #93a1a1; }
      .syntax-nb { color: #B58900; }
      .syntax-nc { color: #3294da; }
      .syntax-no { color: #e9662f; }
      .syntax-nd { color: #3294da; }
      .syntax-ni { color: #e9662f; }
      .syntax-ne { color: #e9662f; }
      .syntax-nf { color: #3294da; }
      .syntax-nl { color: #93a1a1; }
      .syntax-nn { color: #93a1a1; }
      .syntax-nx { color: #93a1a1; }
      .syntax-py { color: #93a1a1; }
      .syntax-nt { color: #3294da; }
      .syntax-nv { color: #3294da; }
      .syntax-ow { color: #859900; }
      .syntax-w { color: #93a1a1; }
      .syntax-mf { color: #2aa198; }
      .syntax-mh { color: #2aa198; }
      .syntax-mi { color: #2aa198; }
      .syntax-mo { color: #2aa198; }
      .syntax-sb { color: #759299; }
      .syntax-sc { color: #2aa198; }
      .syntax-sd { color: #93a1a1; }
      .syntax-s2 { color: #2aa198; }
      .syntax-se { color: #e9662f; }
      .syntax-sh { color: #93a1a1; }
      .syntax-si { color: #2aa198; }
      .syntax-sx { color: #2aa198; }
      .syntax-sr { color: #e8625f; }
      .syntax-s1 { color: #2aa198; }
      .syntax-ss { color: #2aa198; }
      .syntax-bp { color: #3294da; }
      .syntax-vc { color: #3294da; }
      .syntax-vg { color: #3294da; }
      .syntax-vi { color: #3294da; }
      .syntax-il { color: #2aa198; }
    }
  }
}

body {
  @include theme-dependent($background-color: #fff, $background-alt-color: #eee, $text-color: #333, $text-highlight-color: #222, $text-secondary-color: #999, $border-color: #ccc);
}

body.theme-light {
  @include theme-dependent($background-color: $bg-lightest, $background-alt-color: $bg-light, $text-color: $fg-dark, $text-highlight-color: $fg-darkest, $text-secondary-color: $fg-lightest, $border-color: #cbc5b6);
}

body.theme-dark {
  @include theme-dependent($background-color: $bg-darkest, $background-alt-color: $bg-dark, $text-color: $fg-light, $text-highlight-color: $fg-lightest, $text-secondary-color: $fg-darkest, $border-color: #33555e);
}

body.theme-black {
  @include theme-dependent($background-color: #000, $background-alt-color: #222, $text-color: #ccc, $text-highlight-color: #ddd, $text-secondary-color: #888, $border-color: #444);
}

// Note: if you add a new theme, you may also want to add a new theme-color
// meta tag inside the base.jinja2 template, so mobile browsers can match
