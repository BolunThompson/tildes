// Copyright (c) 2018 Tildes contributors <code@tildes.net>
// SPDX-License-Identifier: AGPL-3.0-or-later

// This file should only contain rules that need to be affected by all the
// different themes, defined inside the `use-theme` mixin below.
// Note that all rules inside the mixin will be included in the compiled CSS
// once for each theme, so they should be kept as minimal as possible.

// Each theme should be defined in its own SCSS file, and consist of a SCSS map
// and a unique `body.theme-<name>` selector.
// The `use-theme` mixin is called inside the body.theme-<name> block and takes
// the theme's map as its only argument, applying each defined color available
// in the map. If a color variable is left undefined in the theme's map, it
// will fall back to the default value from `$theme-base` instead.

@mixin use-theme($theme) {
  $theme: init-theme($theme);

  $foreground-primary: map-get($theme, 'foreground-primary');
  $foreground-secondary: map-get($theme, 'foreground-secondary');
  $foreground-highlight: map-get($theme, 'foreground-highlight');
  $foreground-middle: map-get($theme, 'foreground-middle');
  $foreground-extreme: map-get($theme, 'foreground-extreme');
  $background-primary: map-get($theme, 'background-primary');
  $background-secondary: map-get($theme, 'background-secondary');
  $background-input: map-get($theme, 'background-input');
  $border-primary: map-get($theme, 'border-primary');
  $anchor-normal: map-get($theme, 'anchor-normal');
  $anchor-normal-hover: map-get($theme, 'anchor-normal-hover');
  $anchor-normal-visited: map-get($theme, 'anchor-normal-visited');

  color: $foreground-primary;
  background-color: $background-secondary;

  // set $is-light as a bool for whether $background-color seems light or dark
  $is-light: lightness($background-primary) > 50;

  a {
    color: $anchor-normal;

    &:hover {
      color: $anchor-normal-hover;
    }

    &:visited {
      color: $anchor-normal-visited;
    }
  }

  a.link-user,
  a.link-group {
    &:visited {
      color: $anchor-normal;
    }
  }

  a.logged-in-user-alert {
    color: $orange;

    &:visited {
      color: $orange;
    }
  }

  a.logged-in-user-username:visited,
  a.site-header-context:visited,
  a.site-header-logo:visited {
    color: unset;
  }

  @include syntax-highlighting($is-light);

  blockquote {
    border-color: $foreground-highlight;
    background-color: $background-secondary;
  }

  code, pre {
    color: $foreground-highlight;
    background-color: $background-secondary;
  }

  fieldset {
    border-color: $border-primary;
  }

  figure {
    border-color: $border-primary;
  }

  main {
    background-color: $background-primary;
  }

  section {
    border-color: $border-primary;
  }

  tbody tr:nth-of-type(2n+1) {
    background-color: $background-secondary;
  }

  td {
    border-color: $border-primary;
  }

  th {
    border-color: $foreground-highlight;
  }

  .btn {
    color: $blue;
    background-color: transparent;
    border-color: $blue;

    &:hover {
      background-color: rgba($blue, 0.2);
    }
  }

  .btn-comment-collapse {
    color: $foreground-secondary;
    border-color: $border-primary;

    &:hover {
      color: $anchor-normal;
    }
  }

  .btn-link {
    color: $blue;
    background-color: transparent;
    border-color: transparent;
  }

  .btn-primary {
    color: #fff;
    background-color: $blue;
    border-color: $blue;

    &:hover {
      background-color: darken($blue, 10%);
      border-color: darken($blue, 10%);
    }

    &:visited {
      color: #fff;
    }
  }

  .btn-used {
    color: $violet;
    border-color: darken($violet, 3%);

    &:hover {
      background-color: darken($violet, 3%);
      border-color: darken($violet, 8%);
      color: #fff;
    }
  }

  .btn-comment-label-exemplary {
    @include labelbutton($comment-label-exemplary-color);
  }

  .btn-comment-label-joke {
    @include labelbutton($comment-label-joke-color);
  }

  .btn-comment-label-noise {
    @include labelbutton($comment-label-noise-color);
  }

  .btn-comment-label-offtopic {
    @include labelbutton($comment-label-offtopic-color);
  }

  .btn-comment-label-malice {
    @include labelbutton($comment-label-malice-color);
  }

  .comment-branch-counter {
    color: $foreground-secondary;
  }

  .comment-nav-link, .comment-nav-link:visited {
    color: $foreground-secondary;
  }

  .label-comment-exemplary { @include theme-special-label($comment-label-exemplary-color, $is-light); }
  .label-comment-joke { @include theme-special-label($comment-label-joke-color, $is-light); }
  .label-comment-noise { @include theme-special-label($comment-label-noise-color, $is-light); }
  .label-comment-offtopic { @include theme-special-label($comment-label-offtopic-color, $is-light); }
  .label-comment-malice { @include theme-special-label($comment-label-malice-color, $is-light); }

  %collapsed-theme {
    header {
      background-color: $background-primary;
    }
  }

  .is-comment-collapsed:not(:target) {
    @extend %collapsed-theme;
  }

  .is-comment-collapsed-individual:not(:target) {
    & > .comment-itself {
      @extend %collapsed-theme;
    }
  }

  .comment {
    border-color: $border-primary;

    header {
      color: $foreground-highlight;
      background-color: $background-secondary;
    }

    &[data-comment-depth="0"] {
      border-color: $border-primary;
    }
  }

  .comment:target > .comment-itself {
    border-left-color: $yellow;
  }

  .comment-nav-link {
    color: $foreground-secondary;
  }

  .divider {
    border-color: $border-primary;

    &[data-content]::after {
      color: $foreground-primary;
      background-color: $background-primary;
    }
  }

  .empty-subtitle {
    color: $foreground-secondary;
  }

  .foreground-secondary {
    color: $foreground-secondary;
  }

  .form-input {
    color: $foreground-primary;
    background-color: $background-input;
  }

  .form-input:not(:focus) {
    border-color: $border-primary;
  }

  .form-select {
    border-color: $border-primary;

    &:not([multiple]):not([size]) {
      background-color: $background-input;
    }
  }

  .form-status-error {
    color: $red;
  }

  .label-topic-tag {
    color: $foreground-middle;

    a,
    a:hover,
    a:visited {
      color: $foreground-middle;
    }
  }

  .label-topic-tag-nsfw {
    @include theme-special-label($topic-tag-nsfw-color, $is-light);
  }

  .label-topic-tag-spoiler {
    @include theme-special-label($topic-tag-spoiler-color, $is-light);
  }

  .logged-in-user-username {
    color: $foreground-primary;
  }

  .message {
    border-color: $border-primary;

    header {
      color: $foreground-highlight;
      background-color: $background-secondary;
    }
  }

  .nav .nav-item {
    a {
      color: $anchor-normal;

      &:hover {
        color: $anchor-normal-hover;
      }
    }

    &.active a {
      color: $anchor-normal;
    }
  }

  .post-button {
    color: $foreground-secondary;

    &:hover {
      color: $foreground-extreme;
    }
  }

  .post-button-used {
    color: $violet;
  }

  .sidebar-controls {
    background-color: $background-secondary;
  }

  #sidebar {
    background-color: $background-primary;
  }

  .site-header-context,
  .site-header-username {
    color: $foreground-primary;
  }

  .site-header-logo {
    color: $foreground-highlight;
  }

  .site-header-sidebar-button.badge[data-badge]::after {
    background-color: $orange;
  }

  .tab-listing-order {
    border-color: $border-primary;
  }

  .tab .tab-item {
    a {
      color: $foreground-primary;
    }

    &.active a {
      color: $anchor-normal;
    }
  }

  .text-secondary {
    color: $foreground-secondary;
  }

  .toast {
    color: $foreground-highlight;
    border-color: $border-primary;
    background-color: $background-secondary;
  }

  // Toasts should have colored border + text for dark themes, instead of a
  // brightly colored background
  @if ($is-light == false) {
    .toast-warning {
      border-color: $orange;
      color: $orange;
      background-color: transparent;
    }
  }

  .topic {
    border-color: $border-primary;
  }

  .topic-listing {
    & > li:nth-of-type(2n) {
      color: mix($foreground-primary, $foreground-highlight);
      background-color: mix($background-primary, $background-secondary);
    }
  }

  .topic-content-metadata {
    color: $foreground-secondary;
  }

  .topic-full-byline {
    color: $foreground-secondary;
  }

  .topic-info {
    color: $foreground-middle;
  }

  .topic-info-comments-new {
    color: $orange;
  }

  .topic-log-entry-time {
    color: $foreground-secondary;
  }

  .topic-text-excerpt {
    color: $foreground-secondary;

    summary::after {
      color: $foreground-secondary;
    }

    &[open] {
      color: $foreground-primary;
    }
  }

  .topic-voting.btn-used {
    border-color: transparent;

    &:hover {
      background-color: darken($blue, 3%);
      border-color: darken($blue, 8%);
    }
  }

  .is-comment-deleted, .is-comment-removed {
    color: $foreground-secondary;
  }

  .is-comment-mine > .comment-itself {
    border-left-color: $violet;
  }

  .is-comment-new {
    & > .comment-itself {
      border-left-color: $orange;
    }

    .comment-text {
      color: $foreground-highlight;
    }
  }

  .is-comment-exemplary {
    & > .comment-itself {
      border-left-color: $comment-label-exemplary-color;
    }
  }

  .is-message-mine,
  .is-topic-mine {
    border-left-color: $violet;
  }

  .is-topic-official {
    border-left-color: $orange;

    h1 {
      a, a:visited {
        color: $orange;
      }
    }
  }
}

@mixin theme-special-label($color, $is-light) {
  @if $is-light {
    background-color: $color;

    a {
      color: #fff;
    }
  }
  @else {
    background-color: transparent;
    color: $color;
    border: 1px solid $color;

    a {
      color: $color;
    }
  }
}

@mixin labelbutton($color) {
  color: $color;
  border-color: $color;

  &:hover {
    color: $color;
  }

  &.btn-used:hover {
    background-color: $color;
    color: #fff;
  }
}

@mixin syntax-highlighting($is-light) {
  @if ($is-light) {
    .highlight {
      .syntax-c { color: #129b12; } // Comment
      .syntax-err { color: #333333; } // Error
      .syntax-g { color: #333333; } // Generic
      .syntax-k { color: #3329c2; } // Keyword
      .syntax-l { color: #333333; } // Literal
      .syntax-n { color: #333333; } // Name
      .syntax-o { color: #859900; } // Operator
      .syntax-x { color: #cb4b16; } // Other
      .syntax-p { color: #333333; } // Punctuation
      .syntax-cm { color: #129b12; } // Comment.Multiline
      .syntax-cp { color: #859900; } // Comment.Preproc
      .syntax-c1 { color: #129b12; } // Comment.Single
      .syntax-cs { color: #859900; } // Comment.Special
      .syntax-gd { color: #2aa198; } // Generic.Deleted
      .syntax-ge { color: #333333; font-style: italic; } // Generic.Emph
      .syntax-gr { color: #dc322f; } // Generic.Error
      .syntax-gh { color: #cb4b16; } // Generic.Heading
      .syntax-gi { color: #859900; } // Generic.Inserted
      .syntax-go { color: #333333; } // Generic.Output
      .syntax-gp { color: #333333; } // Generic.Prompt
      .syntax-gs { color: #333333; font-weight: bold; } // Generic.Strong
      .syntax-gu { color: #cb4b16; } // Generic.Subheading
      .syntax-gt { color: #333333; } // Generic.Traceback
      .syntax-kc { color: #cb4b16; } // Keyword.Constant
      .syntax-kd { color: #268bd2; } // Keyword.Declaration
      .syntax-kn { color: #859900; } // Keyword.Namespace
      .syntax-kp { color: #859900; } // Keyword.Pseudo
      .syntax-kr { color: #268bd2; } // Keyword.Reserved
      .syntax-kt { color: #3329c2; } // Keyword.Type
      .syntax-ld { color: #333333; } // Literal.Date
      .syntax-m { color: #2aa198; } // Literal.Number
      .syntax-s { color: #2aa198; } // Literal.String
      .syntax-na { color: #333333; } // Name.Attribute
      .syntax-nb { color: #B58900; } // Name.Builtin
      .syntax-nc { color: #268bd2; } // Name.Class
      .syntax-no { color: #cb4b16; } // Name.Constant
      .syntax-nd { color: #268bd2; } // Name.Decorator
      .syntax-ni { color: #cb4b16; } // Name.Entity
      .syntax-ne { color: #cb4b16; } // Name.Exception
      .syntax-nf { color: #268bd2; } // Name.Function
      .syntax-nl { color: #333333; } // Name.Label
      .syntax-nn { color: #333333; } // Name.Namespace
      .syntax-nx { color: #333333; } // Name.Other
      .syntax-py { color: #333333; } // Name.Property
      .syntax-nt { color: #268bd2; } // Name.Tag
      .syntax-nv { color: #268bd2; } // Name.Variable
      .syntax-ow { color: #859900; } // Operator.Word
      .syntax-w { color: #333333; } // Text.Whitespace
      .syntax-mf { color: #2aa198; } // Literal.Number.Float
      .syntax-mh { color: #2aa198; } // Literal.Number.Hex
      .syntax-mi { color: #2aa198; } // Literal.Number.Integer
      .syntax-mo { color: #2aa198; } // Literal.Number.Oct
      .syntax-sb { color: #129b12; } // Literal.String.Backtick
      .syntax-sc { color: #2aa198; } // Literal.String.Char
      .syntax-sd { color: #333333; } // Literal.String.Doc
      .syntax-s2 { color: #2aa198; } // Literal.String.Double
      .syntax-se { color: #cb4b16; } // Literal.String.Escape
      .syntax-sh { color: #333333; } // Literal.String.Heredoc
      .syntax-si { color: #2aa198; } // Literal.String.Interpol
      .syntax-sx { color: #2aa198; } // Literal.String.Other
      .syntax-sr { color: #dc322f; } // Literal.String.Regex
      .syntax-s1 { color: #2aa198; } // Literal.String.Single
      .syntax-ss { color: #2aa198; } // Literal.String.Symbol
      .syntax-bp { color: #268bd2; } // Name.Builtin.Pseudo
      .syntax-vc { color: #268bd2; } // Name.Variable.Class
      .syntax-vg { color: #268bd2; } // Name.Variable.Global
      .syntax-vi { color: #268bd2; } // Name.Variable.Instance
      .syntax-il { color: #2aa198; } // Literal.Number.Integer.Long
    }
  } @else {
    .highlight {
      .syntax-c { color: #759299; }
      .syntax-err { color: #93a1a1; }
      .syntax-g { color: #93a1a1; }
      .syntax-k { color: #859900; }
      .syntax-l { color: #93a1a1; }
      .syntax-n { color: #93a1a1; }
      .syntax-o { color: #859900; }
      .syntax-x { color: #e9662f; }
      .syntax-p { color: #93a1a1; }
      .syntax-cm { color: #759299; }
      .syntax-cp { color: #859900; }
      .syntax-c1 { color: #759299; }
      .syntax-cs { color: #859900; }
      .syntax-gd { color: #2aa198; }
      .syntax-ge { color: #93a1a1; font-style: italic; }
      .syntax-gr { color: #e8625f; }
      .syntax-gh { color: #e9662f; }
      .syntax-gi { color: #859900; }
      .syntax-go { color: #93a1a1; }
      .syntax-gp { color: #93a1a1; }
      .syntax-gs { color: #93a1a1; font-weight: bold; }
      .syntax-gu { color: #e9662f; }
      .syntax-gt { color: #93a1a1; }
      .syntax-kc { color: #e9662f; }
      .syntax-kd { color: #3294da; }
      .syntax-kn { color: #859900; }
      .syntax-kp { color: #859900; }
      .syntax-kr { color: #3294da; }
      .syntax-kt { color: #e8625f; }
      .syntax-ld { color: #93a1a1; }
      .syntax-m { color: #2aa198; }
      .syntax-s { color: #2aa198; }
      .syntax-na { color: #93a1a1; }
      .syntax-nb { color: #B58900; }
      .syntax-nc { color: #3294da; }
      .syntax-no { color: #e9662f; }
      .syntax-nd { color: #3294da; }
      .syntax-ni { color: #e9662f; }
      .syntax-ne { color: #e9662f; }
      .syntax-nf { color: #3294da; }
      .syntax-nl { color: #93a1a1; }
      .syntax-nn { color: #93a1a1; }
      .syntax-nx { color: #93a1a1; }
      .syntax-py { color: #93a1a1; }
      .syntax-nt { color: #3294da; }
      .syntax-nv { color: #3294da; }
      .syntax-ow { color: #859900; }
      .syntax-w { color: #93a1a1; }
      .syntax-mf { color: #2aa198; }
      .syntax-mh { color: #2aa198; }
      .syntax-mi { color: #2aa198; }
      .syntax-mo { color: #2aa198; }
      .syntax-sb { color: #759299; }
      .syntax-sc { color: #2aa198; }
      .syntax-sd { color: #93a1a1; }
      .syntax-s2 { color: #2aa198; }
      .syntax-se { color: #e9662f; }
      .syntax-sh { color: #93a1a1; }
      .syntax-si { color: #2aa198; }
      .syntax-sx { color: #2aa198; }
      .syntax-sr { color: #e8625f; }
      .syntax-s1 { color: #2aa198; }
      .syntax-ss { color: #2aa198; }
      .syntax-bp { color: #3294da; }
      .syntax-vc { color: #3294da; }
      .syntax-vg { color: #3294da; }
      .syntax-vi { color: #3294da; }
      .syntax-il { color: #2aa198; }
    }
  }
}

@function init-theme($theme-map) {
  @return map-merge($theme-base, $theme-map);
}

$theme-base: (
  'foreground-primary': #333,
  'foreground-secondary': #999,
  'foreground-highlight': #222,
  'foreground-middle': #666,
  'foreground-extreme': #000,
  'background-primary': #fff,
  'background-secondary': #eee,
  'background-input': #f7f7f7,
  'border-primary': #ccc,
  'anchor-normal': $blue,
  'anchor-normal-hover': darken($blue, 5%),
  'anchor-normal-visited': $violet,
);

// define the default theme using the base values
body {
  @include use-theme($theme-base);
}
